<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.MissingMapper">
    <resultMap type="dto.MissingPersonDTO" id="missing">
        <id column="missing_serialNum" property="missingSerialNum"></id>
        <result column="member_serialNum" property="memberSerialNum" />
        <result column="admin_serialNum" property="adminSerialNum" />
        <result column="missing_name" property="name" />
        <result column="missing_gender" property="gender" />
        <result column="missing_birth" property="birth" />
        <result column="missing_etc" property="etc" />
        <result column="missing_place" property="place" />
        <result column="missing_date" property="missingDate" />
        <result column="missing_img" property="image" />
    </resultMap>

    <insert id="insertMissingPerson" parameterType="dto.MissingPersonDTO">
        INSERT INTO missing_info (
        member_serialNum,
        missing_name,
        missing_gender,
        missing_birth,
        missing_etc,
        missing_place,
        missing_date,
        missing_img
        ) VALUES (
        #{memberSerialNum},
        #{name},
        #{gender},
        TO_NUMBER(REPLACE(#{birth}, '-', '')),
        #{etc},
        #{place},
        TO_DATE(#{missingDate}, 'YYYY-MM-DD'),
        #{image}
        )
    </insert>

    <select id="selectMissingList" resultMap="missing">
        SELECT * FROM missing_info
        ORDER BY missing_serialNum DESC
    </select>

    <select id="selectMissingCount" resultType="int">
        SELECT COUNT(*) FROM missing_info
    </select>

    <select id="selectAdminSerialNumByMember" parameterType="string" resultType="string">
        SELECT admin_serialNum FROM member_info WHERE member_serialNum = #{memberSerialNum}
    </select>

    <delete id="deleteMissingPerson" parameterType="string">
        DELETE FROM missing_info WHERE missing_serialNum = #{missingSerialNum}
    </delete>
    
    <select id="selectMissingById" parameterType="String" resultMap="missing">
        SELECT * FROM missing_info WHERE missing_serialNum = #{serialNum}
    </select>
    
    <select id="selectMissingListMain" resultMap="missing">
        SELECT * FROM missing_info
        ORDER BY missing_serialNum DESC
    </select>
    
    <select id="selectMissingPersonBySerialNum" parameterType="String" resultType="dto.MissingPersonDTO">
        SELECT * FROM missing_info WHERE missing_serialNum = #{serialNum}
    </select>
    
    <select id="searchMissingList" resultMap="missing" parameterType="map">
        SELECT *
        FROM (
            SELECT A.*, ROWNUM AS RNUM
            FROM (
                SELECT * FROM missing_info
                <where>
                    <if test="name != null and name != ''">
                        AND missing_name LIKE '%' || #{name} || '%'
                    </if>
                    <if test="gender != null and gender != ''">
                        AND missing_gender = #{gender}
                    </if>
                    <if test="place != null and place != ''">
                        AND missing_place LIKE '%' || #{place} || '%'
                    </if>
                    <if test="etc != null and etc != ''">
                        AND missing_etc LIKE '%' || #{etc} || '%'
                    </if>
                    <if test="age != null and age != ''">
                        AND TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(TO_CHAR(missing_birth), 'YYYYMMDD'))/12) = #{age}
                    </if>
                </where>
                ORDER BY missing_serialNum DESC
            ) A
            WHERE ROWNUM &lt;= #{endRow}
        )
        WHERE RNUM &gt;= #{startRow}
    </select>

    <select id="searchMissingCount" resultType="int" parameterType="map">
        SELECT COUNT(*) FROM missing_info
        <where>
            <if test="name != null and name != ''">
                AND missing_name LIKE '%' || #{name} || '%'
            </if>
            <if test="gender != null and gender != ''">
                AND missing_gender = #{gender}
            </if>
            <if test="place != null and place != ''">
                AND missing_place LIKE '%' || #{place} || '%'
            </if>
            <if test="etc != null and etc != ''">
                AND missing_etc LIKE '%' || #{etc} || '%'
            </if>
            <if test="age != null and age != ''">
                AND TRUNC(MONTHS_BETWEEN(SYSDATE, TO_DATE(TO_CHAR(missing_birth), 'YYYYMMDD'))/12) = #{age}
            </if>
        </where>
    </select>
</mapper>